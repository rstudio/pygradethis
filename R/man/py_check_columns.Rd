% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_dataframes.R
\name{py_check_columns}
\alias{py_check_columns}
\title{Checks that the columns of two DataFrame/Series are the same.}
\usage{
py_check_columns(object = .result, expected = .solution, env = parent.frame())
}
\arguments{
\item{object}{A DataFrame to be compared to `expected`.}

\item{expected}{A DataFrame containing the expected column.}

\item{env}{The environment used for grading.}
}
\value{
A NULL if equal, a `pygradethis_problem` object otherwise
}
\description{
This extracts columns from the two objects, converts them to R lists
and checks that they are identical.
}
\examples{
\dontrun{
reticulate::py_run_string('import pandas as pd; import numpy as np')
.result <- reticulate::py_eval("pd.DataFrame({'a':[1,2,3]})")
.solution <- reticulate::py_eval("pd.DataFrame({'b':[1,2,3]})")
pygradethis::py_check_columns()

# $type
# [1] "wrong_columns"
#
# $expected
# [1] "b"
#
# $actual
# [1] "a"
#
# $message
# [1] "The column names do not match the expected columns."
#
# attr(,"class")
# [1] "wrong_columns_problem" "pygradethis_problem"   "gradethis_problem"
}
}
